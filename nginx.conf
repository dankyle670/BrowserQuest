worker_processes auto;
worker_rlimit_nofile 20000;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    upstream game_servers {
        # Sticky session basée sur IP
        ip_hash;
        
        # Détection des serveurs en panne
        server app1:8000 max_fails=3 fail_timeout=30s;
        server app2:8000 max_fails=3 fail_timeout=30s;
        
        # Keepalive pour les connexions WebSocket
        keepalive 32;
    }

    # Cache pour les assets statiques
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=24h max_size=1g;

    server {
        listen 80;
        
        # Endpoint de healthcheck pour Nginx
        location /healthz {
            access_log off;
            return 200 "healthy\n";
        }

        # Proxy WebSocket vers les serveurs avec gestion améliorée
        location / {
            proxy_pass http://game_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Timeouts plus longs pour les WebSockets
            proxy_connect_timeout 10s;
            proxy_read_timeout 1h;
            proxy_send_timeout 1h;
            
            # Gestion des erreurs
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            
            # Buffer settings
            proxy_buffering off;
            
            # Désactiver les redirections de cache
            proxy_redirect off;
            
            # Retry for temporary errors
            proxy_next_upstream_timeout 10s;
        }
        
        # Servir les assets clients avec cache
        location /client/ {
            proxy_pass http://client:8080/;
            proxy_cache STATIC;
            proxy_cache_valid 200 1h;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            add_header X-Cache-Status $upstream_cache_status;
            
            # Si le client est indisponible, on continue de servir le contenu mis en cache
            proxy_cache_background_update on;
            proxy_cache_revalidate on;
        }
    }
}